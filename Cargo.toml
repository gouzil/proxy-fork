[workspace]
members = ["crates/*"]
resolver = "2"

[workspace.package]
version = "0.1.0"
edition = "2024"
rust-version = "1.90.0"

[workspace.dependencies]
proxy-fork-core = { path = "crates/proxy-fork-core" }

tokio = { version = "1.47.1", features = [
    "net",
    "macros",
    "io-util",
    "rt-multi-thread",
]}
tokio-rustls = "0.26.4"
tokio-util = { version = "0.7.16", features = ["codec"] }
rustls-native-certs = "0.8.1"
etcetera = "0.10.0"
hudsucker = { version = "0.24.0", features = ["full"] }
tracing = { version = "0.1.41" }
tracing-subscriber = { version = "0.3.20"}
fs-err = "3.1.3"
derive_builder = "0.20.2"
anyhow = "1.0.100"
tempfile = "3.23.0"
codspeed-criterion-compat = "4.0.3"
http = "1.3.1"
x509-parser = "0.18.0"
time = "0.3.44"
regex = "1.11.3"
lru = "0.16.1"
toml = "0.9.7"
clap = { version = "4.5.48", features = ["derive"] }
serde = { version = "1.0.228", features = ["derive"] }
sysproxy = "0.3.0"

[workspace.lints.rust]
unsafe_code = "warn"
unreachable_pub = "warn"

[workspace.lints.clippy]
pedantic = { level = "warn", priority = -2 }
# Allowed pedantic lints
char_lit_as_u8 = "allow"
collapsible_else_if = "allow"
collapsible_if = "allow"
implicit_hasher = "allow"
map_unwrap_or = "allow"
match_same_arms = "allow"
missing_errors_doc = "allow"
missing_panics_doc = "allow"
module_name_repetitions = "allow"
must_use_candidate = "allow"
similar_names = "allow"
struct_excessive_bools = "allow"
too_many_arguments = "allow"
too_many_lines = "allow"
used_underscore_binding = "allow"
# Disallowed restriction lints
print_stdout = "warn"
print_stderr = "warn"
dbg_macro = "warn"
empty_drop = "warn"
empty_structs_with_brackets = "warn"
exit = "warn"
get_unwrap = "warn"
rc_buffer = "warn"
rc_mutex = "warn"
rest_pat_in_fully_bound_structs = "warn"
if_not_else = "allow"
use_self = "warn"

[profile.release]
codegen-units = 1
lto = "fat"
opt-level = "z"
strip = true
